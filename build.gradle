import org.jetbrains.kotlin.gradle.tasks.KotlinCompilationTask

plugins {
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
    id 'org.jetbrains.kotlin.kapt' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.8.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.8.22'
}

group = 'io.github.zh-efimenko.kafka-streams'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // kotlin
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.1'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'io.github.microutils:kotlin-logging:3.0.5'

    // metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'io.micrometer:micrometer-core'

    // kafka
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-streams'

    // devtools
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    kapt 'org.springframework.boot:spring-boot-configuration-processor'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.apache.kafka:kafka-streams-test-utils'
}

tasks.named('compileKotlin', KotlinCompilationTask.class) {
    compilerOptions {
        freeCompilerArgs.add('-Xjsr305=strict')
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
